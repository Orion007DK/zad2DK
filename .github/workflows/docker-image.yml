name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
        
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-single-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-single-buildx

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
          context: ./
          file: ./Dockerfile
          platforms: linux/arm,linux/amd64,linux/386
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/zad2dk:latest
          
    - name: Build and push
      id: docker_build_multistage
      uses: docker/build-push-action@v2
      with:
          context: ./
          file: ./Dockerfile.multistage
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/zad2dk-multistage:latest
    
    - name: Build and push
      id: docker_build_cache
      uses: docker/build-push-action@v2
      with:
          context: ./
          file: ./Dockerfile
          platforms: linux/arm,linux/amd64,linux/386
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/zad2dk-from-cache:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          
    - name: Move cache
      run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
          
    
